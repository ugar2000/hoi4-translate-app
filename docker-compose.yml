services:
  # Database
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: translator
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
      
  # Redis for queue management
  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  # Main Next.js Application
  web-app:
    build:
      context: .
      dockerfile: dockerfiles/web-app.Dockerfile
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/translator
      - JWT_SECRET=your-jwt-secret-change-in-production
      - NEXTAUTH_SECRET=your-nextauth-secret-change-in-production
      - NEXTAUTH_URL=http://localhost:3000
    depends_on:
      - db
      - redis
    networks:
      - app-network
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next

  # Microsoft Translator Service
  translator-service:
    build:
      context: ./services/deepl-service
      dockerfile: ../../dockerfiles/translator-service.Dockerfile
    ports:
      - "3004:3004"
    environment:
      - PORT=3004
      - MICROSOFT_TRANSLATOR_KEY=${MICROSOFT_TRANSLATOR_KEY}
      - MICROSOFT_TRANSLATOR_REGION=${MICROSOFT_TRANSLATOR_REGION}
    networks:
      - app-network
    restart: unless-stopped

  # WebSocket Service
  websocket-service:
    build:
      context: ./services/websocket-service
      dockerfile: ../../dockerfiles/websocket-service.Dockerfile
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - REDIS_URL=redis://redis:6379
      - MICROSOFT_TRANSLATOR_SERVICE_URL=http://translator-service:3004
      - VARIABLE_SEPARATOR_URL=http://variable-separator:3003
    depends_on:
      - redis
      - translator-service
    networks:
      - app-network
    restart: unless-stopped

  # Variable Separator Service (placeholder - you may need to create this)
  variable-separator:
    build:
      context: ./services/variable-separator
      dockerfile: ../../dockerfiles/variable-separator.Dockerfile
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
    networks:
      - app-network
    restart: unless-stopped
    profiles:
      - full # Optional service, only starts with --profile full

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  db-data:
